plugins {
    id 'java'
    id 'checkstyle'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'dev.felnull'
version = '1.0.0'

checkstyle {
    toolVersion = "10.12.2"
}

configurations {
    implementation.extendsFrom shadowIn
}

repositories {
    maven {
        name = 'felnull maven'
        url = 'https://maven.felnull.dev/'
    }
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"

    shadowIn "net.kunmc.lab:ikisugi-logger:1.3"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

shadowJar {
    configurations = [project.configurations.shadowIn]
    relocate 'net.kunmc.lab.ikisugilogger', 'dev.felnull.shortlifeplugin.include.net.kunmc.lab.ikisugilogger'
    relocate 'xyz.xenondevs', 'dev.felnull.shortlifeplugin.include.xyz.xenondevs'
    relocate 'org.jetbrains.annotations', 'dev.felnull.shortlifeplugin.include.org.jetbrains.annotations'
    relocate 'org.intellij.lang.annotations', 'dev.felnull.shortlifeplugin.include.org.intellij.lang.annotations'

    archiveClassifier.set("")
}

tasks.named("build") {
    dependsOn(tasks.named("shadowJar"))
}

// ビルドしたJarファイルをサーバーのプラグインフォルダへコピー
tasks.register('copyJar', Copy) {
    from("build/libs/ShortLifePlugin-${version}.jar")
    into(".run/plugins")
    rename("ShortLifePlugin-${version}.jar", "ShortLifePlugin.jar")
}